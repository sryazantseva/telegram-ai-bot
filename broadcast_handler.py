from datetime import datetime, timedelta

...

# –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏—è
markup = InlineKeyboardMarkup()
markup.add(
    InlineKeyboardButton("‚úÖ –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–µ–π—á–∞—Å", callback_data=f"send_now|{broadcast_id}"),
    InlineKeyboardButton("‚è∞ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ –∑–∞–≤—Ç—Ä–∞", callback_data=f"ask_time|{broadcast_id}")
)
...

# –û–±—Ä–∞–±–æ—Ç–∫–∞ inline-–∫–Ω–æ–ø–æ–∫
@bot.callback_query_handler(func=lambda call: call.data.startswith("send_") or call.data.startswith("ask_time"))
def handle_send(call):
    action, broadcast_id = call.data.split("|", 1)

    with open(BROADCAST_FILE, "r") as f:
        broadcasts = json.load(f)
    broadcast = broadcasts.get(broadcast_id)

    if not broadcast:
        bot.send_message(call.message.chat.id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ä–∞—Å—Å—ã–ª–∫—É.")
        return

    if action == "ask_time":
        bot.send_message(call.message.chat.id, "üïì –í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–≤—Ç—Ä–∞ (–≤ —Ñ–æ—Ä–º–∞—Ç–µ –ß–ß:–ú–ú):")
        bot.register_next_step_handler(call.message, process_custom_time, broadcast_id)
    elif action == "send_now":
        do_broadcast(broadcast["text"], broadcast.get("file_id"), broadcast.get("link"))

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
def process_custom_time(message, broadcast_id):
    time_text = message.text.strip()
    try:
        hour, minute = map(int, time_text.split(":"))
        if not (0 <= hour <= 23 and 0 <= minute <= 59):
            raise ValueError
        tomorrow = datetime.now() + timedelta(days=1)
        send_time = tomorrow.replace(hour=hour, minute=minute, second=0, microsecond=0)

        with open(BROADCAST_FILE, "r") as f:
            broadcasts = json.load(f)
        broadcast = broadcasts.get(broadcast_id)

        if broadcast:
            schedule_broadcast(broadcast["text"], broadcast.get("file_id"), broadcast.get("link"), send_time)
            bot.send_message(message.chat.id, f"üìÖ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞ –∑–∞–≤—Ç—Ä–∞ –≤ {send_time.strftime('%H:%M')} –ú–°–ö")
        else:
            bot.send_message(message.chat.id, "‚ùå –û—à–∏–±–∫–∞: —Ä–∞—Å—Å—ã–ª–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
    except Exception:
        bot.send_message(message.chat.id, "‚õî –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –í–≤–µ–¥–∏—Ç–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä, 14:30")

